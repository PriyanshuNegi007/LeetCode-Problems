//BruteForce Approach
class Solution {
    public int maxSubArray(int[] nums){
        int maxSum= Integer.MIN_VALUE;
        for(int i=0;i<nums.length;i++){
            int currentSum=0;
            for(int j=i;j<nums.length;j++){
                currentSum += nums[j];
                maxSum= Math.max(maxSum,currentSum);
            }
        }
        return maxSum;
    }
}

//Optimized Approach using wKadane Algorithm

class Solution {
    public int maxSubArray(int[] nums){
        int sum=nums[0];
        int maxSum=nums[0];
        for(int i=1;i<nums.length;i++){
            sum += nums[i];
            sum = Math.max(sum,nums[i]);
            maxSum=Math.max(sum,maxSum);
        }
        return maxSum;
    }
